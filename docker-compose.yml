services:
  # Base de datos PostgreSQL para el servicio de Productos
  db_productos:
    image: postgres:13
    container_name: db_productos_container
    environment:
      POSTGRES_DB: productosdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user
    ports:
      - "5432:5432"
    volumes:
      - productos_data:/var/lib/postgresql/data

  # Microservicio de Productos
  productos-service:
    build:
      context: ./Productos
      dockerfile: Dockerfile
    container_name: productos_service_container
    ports:
      - "8080:8080"
    depends_on:
      - db_productos
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_productos:5432/productosdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: user
      SERVICE_API_KEY: productos_secreta_12345
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped

  # Base de datos PostgreSQL para el servicio de Inventario
  db_inventario:
    image: postgres:13
    container_name: db_inventario_container
    environment:
      POSTGRES_DB: inventariodb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user
    ports:
      - "5433:5432"
    volumes:
      - inventario_data:/var/lib/postgresql/data

  # Microservicio de Inventario
  inventario-service:
    build:
      context: ./Inventario
      dockerfile: Dockerfile
    container_name: inventario_service_container
    ports:
      - "8081:8081"
    depends_on:
      - db_inventario
      - productos-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_inventario:5432/inventariodb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: user
      PRODUCTO_SERVICE_URL: http://productos-service:8080
      PRODUCTO_SERVICE_API_KEY: productos_secreta_12345
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    restart: unless-stopped

volumes:
  productos_data: # Define el volumen para persistir datos de productos
  inventario_data: # Define el volumen para persistir datos de inventario